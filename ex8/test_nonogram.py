from nonogram import *

def test_solve_easy_nonogram():
    assert solve_easy_nonogram([[], []]) == []


def test_solve_nonogram():
    assert solve_nonogram([[[2, 1, 2], [2, 6], [1, 4, 2], [1, 2, 3, 1], [2, 1, 1], [1, 1, 6], [2, 2, 1, 1],
                           [1, 1, 2, 1], [3, 1, 2], [1, 1, 2]],
                                [[3, 5], [2, 1, 1], [1, 4, 2], [3, 1], [3, 2, 1], [3, 1, 1], [1, 1, 1, 3], [6, 1], [3, 1, 1], [2, 6]]]) \
           == [[[0, 1, 1, 0, 1, 0, 0, 0, 1, 1], [1, 1, 0, 0, 1, 1, 1, 1, 1, 1], [1, 0, 1, 1, 1, 1, 0, 1, 1, 0],
               [1, 0, 1, 1, 0, 1, 1, 1, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1], [1, 0, 1, 0, 1, 1, 1, 1, 1, 1],
               [1, 1, 0, 1, 1, 0, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 0, 0, 1],
               [1, 1, 1, 0, 0, 0, 1, 0, 1, 1], [1, 0, 0, 0, 1, 0, 1, 1, 0, 0]]]

    assert solve_nonogram([[[3, 4], [1, 1, 3], [3, 1, 1, 1], [2, 1, 2, 2], [1, 2], [4, 2], [2, 6],
                           [1, 2, 2, 2], [2, 2, 2, 1], [1, 1, 1, 1]],
                          [[1, 1, 3], [1, 3, 1, 1], [1, 1, 3, 1], [1, 2, 1, 2], [1, 2, 2], [2, 3], [2, 1, 4], [3, 2, 1], [2, 5], [1, 3, 3]]]) \
           == [[[0, 1, 1, 1, 0, 0, 1, 1, 1, 1], [1, 0, 0, 0, 1, 0, 1, 1, 1, 0], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1],
               [1, 1, 0, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1], [0, 0, 1, 1, 1, 1, 0, 1, 1, 0],
               [0, 1, 1, 0, 1, 1, 1, 1, 1, 1], [1, 0, 1, 1, 0, 1, 1, 0, 1, 1], [1, 1, 0, 1, 1, 0, 1, 1, 0, 1],
               [1, 0, 1, 0, 1, 0, 1, 0, 0, 0]]]


    assert solve_nonogram([[[1, 1, 1, 1, 2, 1, 1, 1, 1],
                            [2],
                            [1, 1, 1, 1, 2, 1, 1, 1, 1],
                            [1, 1, 1, 6, 1, 1, 1],
                            [1, 1, 1, 2, 1, 1, 1],
                            [1, 1, 10, 1, 1],
                            [1, 1, 2, 1, 1],
                            [1, 14, 1],
                            [1, 2, 1],
                            [18],
                            [2],
                            [1, 2],
                            [5, 2, 1],
                            [3, 4, 5],
                            [1, 6, 3],
                            [8, 1]],
                           [[1, 8, 1],
                            [2, 1],
                            [1, 6, 1, 4],
                            [1, 1, 2],
                            [1, 4, 1, 1, 1],
                            [1, 1, 1, 1],
                           [1, 2, 1, 1, 1, 2],
                            [1, 1, 1, 1, 3],
                            [16],
                            [16],
                            [1, 1, 1, 1, 3],
                            [1, 2, 1, 1, 1, 2],
                           [1, 1, 1, 1],
                            [1, 4, 1, 1, 1],
                            [1, 1, 2],
                            [1, 6, 1, 4],
                            [1, 2],
                            [1, 8, 1]]]) == \
           [[[1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0],
            [1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1], [1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1],
            [1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1],
            [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1], [1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1],
            [1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
            [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0],
            [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1],
            [0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0], [0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0]]]

    assert solve_nonogram([[[1], [1]], [[1], [1]]]) == [[[1, 0], [0, 1]], [[0, 1], [1, 0]]]

    assert solve_nonogram([[[2], [2, 1], [1, 3], [1, 1, 1, 1], [1, 1, 5],
                      [1, 1, 1, 1, 1, 1], [1, 1, 1, 2, 1],
                      [1, 1, 1, 1],
                      [1, 1, 4, 3], [4, 3, 2], [1, 1, 1, 1, 1],
                      [7, 2, 1],
                      [1, 1, 1, 1, 3], [1, 1, 1, 1, 1, 1],
                      [1, 1, 5, 3],
                      [1, 1, 5, 1, 1], [1, 1, 2, 2, 1, 1],
                      [1, 1, 2, 2, 1, 1], [1, 1, 1, 1, 5],
                      [1, 1, 2, 2, 1, 1]],
                     [[1, 2], [6, 9], [1, 1], [16], [1, 1, 1],
                      [1, 7, 1],
                      [2, 1, 2, 6], [2, 2, 2], [1, 2, 2, 6],
                      [1, 1, 1, 1, 6, 1], [2, 3, 2, 1, 1],
                      [1, 1, 1, 2, 10], [4, 2, 2, 1, 1, 1], [11],
                      [1]]]) == \
           [[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0],
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0],
            [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0],
            [1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0],
            [0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0],
            [0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0],
            [0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0],
            [0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0],
            [0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0],
            [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0],
            [1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0],
            [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0],
            [0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0],
            [0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0],
            [0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0],
            [0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0],
            [0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0],
            [0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0],
            [0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1],
            [0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0]]]

    assert solve_nonogram([[[1], [1], [1], [1], [1]], [[1], [1], [1], [1], [1]]]) == [
                [[1, 0, 0, 0, 0],
                 [0, 1, 0, 0, 0],
                 [0, 0, 1, 0, 0],
                 [0, 0, 0, 1, 0],
                 [0, 0, 0, 0, 1]],
                [[1, 0, 0, 0, 0],
                 [0, 1, 0, 0, 0],
                 [0, 0, 1, 0, 0],
                 [0, 0, 0, 0, 1],
                 [0, 0, 0, 1, 0]],
                [[1, 0, 0, 0, 0],
                 [0, 1, 0, 0, 0],
                 [0, 0, 0, 1, 0],
                 [0, 0, 1, 0, 0],
                 [0, 0, 0, 0, 1]],
                [[1, 0, 0, 0, 0],
                 [0, 1, 0, 0, 0],
                 [0, 0, 0, 1, 0],
                 [0, 0, 0, 0, 1],
                 [0, 0, 1, 0, 0]],
                [[1, 0, 0, 0, 0],
                 [0, 1, 0, 0, 0],
                 [0, 0, 0, 0, 1],
                 [0, 0, 1, 0, 0],
                 [0, 0, 0, 1, 0]],
                [[1, 0, 0, 0, 0],
                 [0, 1, 0, 0, 0],
                 [0, 0, 0, 0, 1],
                 [0, 0, 0, 1, 0],
                 [0, 0, 1, 0, 0]],
                [[1, 0, 0, 0, 0],
                 [0, 0, 1, 0, 0],
                 [0, 1, 0, 0, 0],
                 [0, 0, 0, 1, 0],
                 [0, 0, 0, 0, 1]],
                [[1, 0, 0, 0, 0],
                 [0, 0, 1, 0, 0],
                 [0, 1, 0, 0, 0],
                 [0, 0, 0, 0, 1],
                 [0, 0, 0, 1, 0]],
                [[1, 0, 0, 0, 0],
                 [0, 0, 1, 0, 0],
                 [0, 0, 0, 1, 0],
                 [0, 1, 0, 0, 0],
                 [0, 0, 0, 0, 1]],
                [[1, 0, 0, 0, 0],
                 [0, 0, 1, 0, 0],
                 [0, 0, 0, 1, 0],
                 [0, 0, 0, 0, 1],
                 [0, 1, 0, 0, 0]],
                [[1, 0, 0, 0, 0],
                 [0, 0, 1, 0, 0],
                 [0, 0, 0, 0, 1],
                 [0, 1, 0, 0, 0],
                 [0, 0, 0, 1, 0]],
                [[1, 0, 0, 0, 0],
                 [0, 0, 1, 0, 0],
                 [0, 0, 0, 0, 1],
                 [0, 0, 0, 1, 0],
                 [0, 1, 0, 0, 0]],
                [[1, 0, 0, 0, 0],
                 [0, 0, 0, 1, 0],
                 [0, 1, 0, 0, 0],
                 [0, 0, 1, 0, 0],
                 [0, 0, 0, 0, 1]],
                [[1, 0, 0, 0, 0],
                 [0, 0, 0, 1, 0],
                 [0, 1, 0, 0, 0],
                 [0, 0, 0, 0, 1],
                 [0, 0, 1, 0, 0]],
                [[1, 0, 0, 0, 0],
                 [0, 0, 0, 1, 0],
                 [0, 0, 1, 0, 0],
                 [0, 1, 0, 0, 0],
                 [0, 0, 0, 0, 1]],
                [[1, 0, 0, 0, 0],
                 [0, 0, 0, 1, 0],
                 [0, 0, 1, 0, 0],
                 [0, 0, 0, 0, 1],
                 [0, 1, 0, 0, 0]],
                [[1, 0, 0, 0, 0],
                 [0, 0, 0, 1, 0],
                 [0, 0, 0, 0, 1],
                 [0, 1, 0, 0, 0],
                 [0, 0, 1, 0, 0]],
                [[1, 0, 0, 0, 0],
                 [0, 0, 0, 1, 0],
                 [0, 0, 0, 0, 1],
                 [0, 0, 1, 0, 0],
                 [0, 1, 0, 0, 0]],
                [[1, 0, 0, 0, 0],
                 [0, 0, 0, 0, 1],
                 [0, 1, 0, 0, 0],
                 [0, 0, 1, 0, 0],
                 [0, 0, 0, 1, 0]],
                [[1, 0, 0, 0, 0],
                 [0, 0, 0, 0, 1],
                 [0, 1, 0, 0, 0],
                 [0, 0, 0, 1, 0],
                 [0, 0, 1, 0, 0]],
                [[1, 0, 0, 0, 0],
                 [0, 0, 0, 0, 1],
                 [0, 0, 1, 0, 0],
                 [0, 1, 0, 0, 0],
                 [0, 0, 0, 1, 0]],
                [[1, 0, 0, 0, 0],
                 [0, 0, 0, 0, 1],
                 [0, 0, 1, 0, 0],
                 [0, 0, 0, 1, 0],
                 [0, 1, 0, 0, 0]],
                [[1, 0, 0, 0, 0],
                 [0, 0, 0, 0, 1],
                 [0, 0, 0, 1, 0],
                 [0, 1, 0, 0, 0],
                 [0, 0, 1, 0, 0]],
                [[1, 0, 0, 0, 0],
                 [0, 0, 0, 0, 1],
                 [0, 0, 0, 1, 0],
                 [0, 0, 1, 0, 0],
                 [0, 1, 0, 0, 0]],
                [[0, 1, 0, 0, 0],
                 [1, 0, 0, 0, 0],
                 [0, 0, 1, 0, 0],
                 [0, 0, 0, 1, 0],
                 [0, 0, 0, 0, 1]],
                [[0, 1, 0, 0, 0],
                 [1, 0, 0, 0, 0],
                 [0, 0, 1, 0, 0],
                 [0, 0, 0, 0, 1],
                 [0, 0, 0, 1, 0]],
                [[0, 1, 0, 0, 0],
                 [1, 0, 0, 0, 0],
                 [0, 0, 0, 1, 0],
                 [0, 0, 1, 0, 0],
                 [0, 0, 0, 0, 1]],
                [[0, 1, 0, 0, 0],
                 [1, 0, 0, 0, 0],
                 [0, 0, 0, 1, 0],
                 [0, 0, 0, 0, 1],
                 [0, 0, 1, 0, 0]],
                [[0, 1, 0, 0, 0],
                 [1, 0, 0, 0, 0],
                 [0, 0, 0, 0, 1],
                 [0, 0, 1, 0, 0],
                 [0, 0, 0, 1, 0]],
                [[0, 1, 0, 0, 0],
                 [1, 0, 0, 0, 0],
                 [0, 0, 0, 0, 1],
                 [0, 0, 0, 1, 0],
                 [0, 0, 1, 0, 0]],
                [[0, 1, 0, 0, 0],
                 [0, 0, 1, 0, 0],
                 [1, 0, 0, 0, 0],
                 [0, 0, 0, 1, 0],
                 [0, 0, 0, 0, 1]],
                [[0, 1, 0, 0, 0],
                 [0, 0, 1, 0, 0],
                 [1, 0, 0, 0, 0],
                 [0, 0, 0, 0, 1],
                 [0, 0, 0, 1, 0]],
                [[0, 1, 0, 0, 0],
                 [0, 0, 1, 0, 0],
                 [0, 0, 0, 1, 0],
                 [1, 0, 0, 0, 0],
                 [0, 0, 0, 0, 1]],
                [[0, 1, 0, 0, 0],
                 [0, 0, 1, 0, 0],
                 [0, 0, 0, 1, 0],
                 [0, 0, 0, 0, 1],
                 [1, 0, 0, 0, 0]],
                [[0, 1, 0, 0, 0],
                 [0, 0, 1, 0, 0],
                 [0, 0, 0, 0, 1],
                 [1, 0, 0, 0, 0],
                 [0, 0, 0, 1, 0]],
                [[0, 1, 0, 0, 0],
                 [0, 0, 1, 0, 0],
                 [0, 0, 0, 0, 1],
                 [0, 0, 0, 1, 0],
                 [1, 0, 0, 0, 0]],
                [[0, 1, 0, 0, 0],
                 [0, 0, 0, 1, 0],
                 [1, 0, 0, 0, 0],
                 [0, 0, 1, 0, 0],
                 [0, 0, 0, 0, 1]],
                [[0, 1, 0, 0, 0],
                 [0, 0, 0, 1, 0],
                 [1, 0, 0, 0, 0],
                 [0, 0, 0, 0, 1],
                 [0, 0, 1, 0, 0]],
                [[0, 1, 0, 0, 0],
                 [0, 0, 0, 1, 0],
                 [0, 0, 1, 0, 0],
                 [1, 0, 0, 0, 0],
                 [0, 0, 0, 0, 1]],
                [[0, 1, 0, 0, 0],
                 [0, 0, 0, 1, 0],
                 [0, 0, 1, 0, 0],
                 [0, 0, 0, 0, 1],
                 [1, 0, 0, 0, 0]],
                [[0, 1, 0, 0, 0],
                 [0, 0, 0, 1, 0],
                 [0, 0, 0, 0, 1],
                 [1, 0, 0, 0, 0],
                 [0, 0, 1, 0, 0]],
                [[0, 1, 0, 0, 0],
                 [0, 0, 0, 1, 0],
                 [0, 0, 0, 0, 1],
                 [0, 0, 1, 0, 0],
                 [1, 0, 0, 0, 0]],
                [[0, 1, 0, 0, 0],
                 [0, 0, 0, 0, 1],
                 [1, 0, 0, 0, 0],
                 [0, 0, 1, 0, 0],
                 [0, 0, 0, 1, 0]],
                [[0, 1, 0, 0, 0],
                 [0, 0, 0, 0, 1],
                 [1, 0, 0, 0, 0],
                 [0, 0, 0, 1, 0],
                 [0, 0, 1, 0, 0]],
                [[0, 1, 0, 0, 0],
                 [0, 0, 0, 0, 1],
                 [0, 0, 1, 0, 0],
                 [1, 0, 0, 0, 0],
                 [0, 0, 0, 1, 0]],
                [[0, 1, 0, 0, 0],
                 [0, 0, 0, 0, 1],
                 [0, 0, 1, 0, 0],
                 [0, 0, 0, 1, 0],
                 [1, 0, 0, 0, 0]],
                [[0, 1, 0, 0, 0],
                 [0, 0, 0, 0, 1],
                 [0, 0, 0, 1, 0],
                 [1, 0, 0, 0, 0],
                 [0, 0, 1, 0, 0]],
                [[0, 1, 0, 0, 0],
                 [0, 0, 0, 0, 1],
                 [0, 0, 0, 1, 0],
                 [0, 0, 1, 0, 0],
                 [1, 0, 0, 0, 0]],
                [[0, 0, 1, 0, 0],
                 [1, 0, 0, 0, 0],
                 [0, 1, 0, 0, 0],
                 [0, 0, 0, 1, 0],
                 [0, 0, 0, 0, 1]],
                [[0, 0, 1, 0, 0],
                 [1, 0, 0, 0, 0],
                 [0, 1, 0, 0, 0],
                 [0, 0, 0, 0, 1],
                 [0, 0, 0, 1, 0]],
                [[0, 0, 1, 0, 0],
                 [1, 0, 0, 0, 0],
                 [0, 0, 0, 1, 0],
                 [0, 1, 0, 0, 0],
                 [0, 0, 0, 0, 1]],
                [[0, 0, 1, 0, 0],
                 [1, 0, 0, 0, 0],
                 [0, 0, 0, 1, 0],
                 [0, 0, 0, 0, 1],
                 [0, 1, 0, 0, 0]],
                [[0, 0, 1, 0, 0],
                 [1, 0, 0, 0, 0],
                 [0, 0, 0, 0, 1],
                 [0, 1, 0, 0, 0],
                 [0, 0, 0, 1, 0]],
                [[0, 0, 1, 0, 0],
                 [1, 0, 0, 0, 0],
                 [0, 0, 0, 0, 1],
                 [0, 0, 0, 1, 0],
                 [0, 1, 0, 0, 0]],
                [[0, 0, 1, 0, 0],
                 [0, 1, 0, 0, 0],
                 [1, 0, 0, 0, 0],
                 [0, 0, 0, 1, 0],
                 [0, 0, 0, 0, 1]],
                [[0, 0, 1, 0, 0],
                 [0, 1, 0, 0, 0],
                 [1, 0, 0, 0, 0],
                 [0, 0, 0, 0, 1],
                 [0, 0, 0, 1, 0]],
                [[0, 0, 1, 0, 0],
                 [0, 1, 0, 0, 0],
                 [0, 0, 0, 1, 0],
                 [1, 0, 0, 0, 0],
                 [0, 0, 0, 0, 1]],
                [[0, 0, 1, 0, 0],
                 [0, 1, 0, 0, 0],
                 [0, 0, 0, 1, 0],
                 [0, 0, 0, 0, 1],
                 [1, 0, 0, 0, 0]],
                [[0, 0, 1, 0, 0],
                 [0, 1, 0, 0, 0],
                 [0, 0, 0, 0, 1],
                 [1, 0, 0, 0, 0],
                 [0, 0, 0, 1, 0]],
                [[0, 0, 1, 0, 0],
                 [0, 1, 0, 0, 0],
                 [0, 0, 0, 0, 1],
                 [0, 0, 0, 1, 0],
                 [1, 0, 0, 0, 0]],
                [[0, 0, 1, 0, 0],
                 [0, 0, 0, 1, 0],
                 [1, 0, 0, 0, 0],
                 [0, 1, 0, 0, 0],
                 [0, 0, 0, 0, 1]],
                [[0, 0, 1, 0, 0],
                 [0, 0, 0, 1, 0],
                 [1, 0, 0, 0, 0],
                 [0, 0, 0, 0, 1],
                 [0, 1, 0, 0, 0]],
                [[0, 0, 1, 0, 0],
                 [0, 0, 0, 1, 0],
                 [0, 1, 0, 0, 0],
                 [1, 0, 0, 0, 0],
                 [0, 0, 0, 0, 1]],
                [[0, 0, 1, 0, 0],
                 [0, 0, 0, 1, 0],
                 [0, 1, 0, 0, 0],
                 [0, 0, 0, 0, 1],
                 [1, 0, 0, 0, 0]],
                [[0, 0, 1, 0, 0],
                 [0, 0, 0, 1, 0],
                 [0, 0, 0, 0, 1],
                 [1, 0, 0, 0, 0],
                 [0, 1, 0, 0, 0]],
                [[0, 0, 1, 0, 0],
                 [0, 0, 0, 1, 0],
                 [0, 0, 0, 0, 1],
                 [0, 1, 0, 0, 0],
                 [1, 0, 0, 0, 0]],
                [[0, 0, 1, 0, 0],
                 [0, 0, 0, 0, 1],
                 [1, 0, 0, 0, 0],
                 [0, 1, 0, 0, 0],
                 [0, 0, 0, 1, 0]],
                [[0, 0, 1, 0, 0],
                 [0, 0, 0, 0, 1],
                 [1, 0, 0, 0, 0],
                 [0, 0, 0, 1, 0],
                 [0, 1, 0, 0, 0]],
                [[0, 0, 1, 0, 0],
                 [0, 0, 0, 0, 1],
                 [0, 1, 0, 0, 0],
                 [1, 0, 0, 0, 0],
                 [0, 0, 0, 1, 0]],
                [[0, 0, 1, 0, 0],
                 [0, 0, 0, 0, 1],
                 [0, 1, 0, 0, 0],
                 [0, 0, 0, 1, 0],
                 [1, 0, 0, 0, 0]],
                [[0, 0, 1, 0, 0],
                 [0, 0, 0, 0, 1],
                 [0, 0, 0, 1, 0],
                 [1, 0, 0, 0, 0],
                 [0, 1, 0, 0, 0]],
                [[0, 0, 1, 0, 0],
                 [0, 0, 0, 0, 1],
                 [0, 0, 0, 1, 0],
                 [0, 1, 0, 0, 0],
                 [1, 0, 0, 0, 0]],
                [[0, 0, 0, 1, 0],
                 [1, 0, 0, 0, 0],
                 [0, 1, 0, 0, 0],
                 [0, 0, 1, 0, 0],
                 [0, 0, 0, 0, 1]],
                [[0, 0, 0, 1, 0],
                 [1, 0, 0, 0, 0],
                 [0, 1, 0, 0, 0],
                 [0, 0, 0, 0, 1],
                 [0, 0, 1, 0, 0]],
                [[0, 0, 0, 1, 0],
                 [1, 0, 0, 0, 0],
                 [0, 0, 1, 0, 0],
                 [0, 1, 0, 0, 0],
                 [0, 0, 0, 0, 1]],
                [[0, 0, 0, 1, 0],
                 [1, 0, 0, 0, 0],
                 [0, 0, 1, 0, 0],
                 [0, 0, 0, 0, 1],
                 [0, 1, 0, 0, 0]],
                [[0, 0, 0, 1, 0],
                 [1, 0, 0, 0, 0],
                 [0, 0, 0, 0, 1],
                 [0, 1, 0, 0, 0],
                 [0, 0, 1, 0, 0]],
                [[0, 0, 0, 1, 0],
                 [1, 0, 0, 0, 0],
                 [0, 0, 0, 0, 1],
                 [0, 0, 1, 0, 0],
                 [0, 1, 0, 0, 0]],
                [[0, 0, 0, 1, 0],
                 [0, 1, 0, 0, 0],
                 [1, 0, 0, 0, 0],
                 [0, 0, 1, 0, 0],
                 [0, 0, 0, 0, 1]],
                [[0, 0, 0, 1, 0],
                 [0, 1, 0, 0, 0],
                 [1, 0, 0, 0, 0],
                 [0, 0, 0, 0, 1],
                 [0, 0, 1, 0, 0]],
                [[0, 0, 0, 1, 0],
                 [0, 1, 0, 0, 0],
                 [0, 0, 1, 0, 0],
                 [1, 0, 0, 0, 0],
                 [0, 0, 0, 0, 1]],
                [[0, 0, 0, 1, 0],
                 [0, 1, 0, 0, 0],
                 [0, 0, 1, 0, 0],
                 [0, 0, 0, 0, 1],
                 [1, 0, 0, 0, 0]],
                [[0, 0, 0, 1, 0],
                 [0, 1, 0, 0, 0],
                 [0, 0, 0, 0, 1],
                 [1, 0, 0, 0, 0],
                 [0, 0, 1, 0, 0]],
                [[0, 0, 0, 1, 0],
                 [0, 1, 0, 0, 0],
                 [0, 0, 0, 0, 1],
                 [0, 0, 1, 0, 0],
                 [1, 0, 0, 0, 0]],
                [[0, 0, 0, 1, 0],
                 [0, 0, 1, 0, 0],
                 [1, 0, 0, 0, 0],
                 [0, 1, 0, 0, 0],
                 [0, 0, 0, 0, 1]],
                [[0, 0, 0, 1, 0],
                 [0, 0, 1, 0, 0],
                 [1, 0, 0, 0, 0],
                 [0, 0, 0, 0, 1],
                 [0, 1, 0, 0, 0]],
                [[0, 0, 0, 1, 0],
                 [0, 0, 1, 0, 0],
                 [0, 1, 0, 0, 0],
                 [1, 0, 0, 0, 0],
                 [0, 0, 0, 0, 1]],
                [[0, 0, 0, 1, 0],
                 [0, 0, 1, 0, 0],
                 [0, 1, 0, 0, 0],
                 [0, 0, 0, 0, 1],
                 [1, 0, 0, 0, 0]],
                [[0, 0, 0, 1, 0],
                 [0, 0, 1, 0, 0],
                 [0, 0, 0, 0, 1],
                 [1, 0, 0, 0, 0],
                 [0, 1, 0, 0, 0]],
                [[0, 0, 0, 1, 0],
                 [0, 0, 1, 0, 0],
                 [0, 0, 0, 0, 1],
                 [0, 1, 0, 0, 0],
                 [1, 0, 0, 0, 0]],
                [[0, 0, 0, 1, 0],
                 [0, 0, 0, 0, 1],
                 [1, 0, 0, 0, 0],
                 [0, 1, 0, 0, 0],
                 [0, 0, 1, 0, 0]],
                [[0, 0, 0, 1, 0],
                 [0, 0, 0, 0, 1],
                 [1, 0, 0, 0, 0],
                 [0, 0, 1, 0, 0],
                 [0, 1, 0, 0, 0]],
                [[0, 0, 0, 1, 0],
                 [0, 0, 0, 0, 1],
                 [0, 1, 0, 0, 0],
                 [1, 0, 0, 0, 0],
                 [0, 0, 1, 0, 0]],
                [[0, 0, 0, 1, 0],
                 [0, 0, 0, 0, 1],
                 [0, 1, 0, 0, 0],
                 [0, 0, 1, 0, 0],
                 [1, 0, 0, 0, 0]],
                [[0, 0, 0, 1, 0],
                 [0, 0, 0, 0, 1],
                 [0, 0, 1, 0, 0],
                 [1, 0, 0, 0, 0],
                 [0, 1, 0, 0, 0]],
                [[0, 0, 0, 1, 0],
                 [0, 0, 0, 0, 1],
                 [0, 0, 1, 0, 0],
                 [0, 1, 0, 0, 0],
                 [1, 0, 0, 0, 0]],
                [[0, 0, 0, 0, 1],
                 [1, 0, 0, 0, 0],
                 [0, 1, 0, 0, 0],
                 [0, 0, 1, 0, 0],
                 [0, 0, 0, 1, 0]],
                [[0, 0, 0, 0, 1],
                 [1, 0, 0, 0, 0],
                 [0, 1, 0, 0, 0],
                 [0, 0, 0, 1, 0],
                 [0, 0, 1, 0, 0]],
                [[0, 0, 0, 0, 1],
                 [1, 0, 0, 0, 0],
                 [0, 0, 1, 0, 0],
                 [0, 1, 0, 0, 0],
                 [0, 0, 0, 1, 0]],
                [[0, 0, 0, 0, 1],
                 [1, 0, 0, 0, 0],
                 [0, 0, 1, 0, 0],
                 [0, 0, 0, 1, 0],
                 [0, 1, 0, 0, 0]],
                [[0, 0, 0, 0, 1],
                 [1, 0, 0, 0, 0],
                 [0, 0, 0, 1, 0],
                 [0, 1, 0, 0, 0],
                 [0, 0, 1, 0, 0]],
                [[0, 0, 0, 0, 1],
                 [1, 0, 0, 0, 0],
                 [0, 0, 0, 1, 0],
                 [0, 0, 1, 0, 0],
                 [0, 1, 0, 0, 0]],
                [[0, 0, 0, 0, 1],
                 [0, 1, 0, 0, 0],
                 [1, 0, 0, 0, 0],
                 [0, 0, 1, 0, 0],
                 [0, 0, 0, 1, 0]],
                [[0, 0, 0, 0, 1],
                 [0, 1, 0, 0, 0],
                 [1, 0, 0, 0, 0],
                 [0, 0, 0, 1, 0],
                 [0, 0, 1, 0, 0]],
                [[0, 0, 0, 0, 1],
                 [0, 1, 0, 0, 0],
                 [0, 0, 1, 0, 0],
                 [1, 0, 0, 0, 0],
                 [0, 0, 0, 1, 0]],
                [[0, 0, 0, 0, 1],
                 [0, 1, 0, 0, 0],
                 [0, 0, 1, 0, 0],
                 [0, 0, 0, 1, 0],
                 [1, 0, 0, 0, 0]],
                [[0, 0, 0, 0, 1],
                 [0, 1, 0, 0, 0],
                 [0, 0, 0, 1, 0],
                 [1, 0, 0, 0, 0],
                 [0, 0, 1, 0, 0]],
                [[0, 0, 0, 0, 1],
                 [0, 1, 0, 0, 0],
                 [0, 0, 0, 1, 0],
                 [0, 0, 1, 0, 0],
                 [1, 0, 0, 0, 0]],
                [[0, 0, 0, 0, 1],
                 [0, 0, 1, 0, 0],
                 [1, 0, 0, 0, 0],
                 [0, 1, 0, 0, 0],
                 [0, 0, 0, 1, 0]],
                [[0, 0, 0, 0, 1],
                 [0, 0, 1, 0, 0],
                 [1, 0, 0, 0, 0],
                 [0, 0, 0, 1, 0],
                 [0, 1, 0, 0, 0]],
                [[0, 0, 0, 0, 1],
                 [0, 0, 1, 0, 0],
                 [0, 1, 0, 0, 0],
                 [1, 0, 0, 0, 0],
                 [0, 0, 0, 1, 0]],
                [[0, 0, 0, 0, 1],
                 [0, 0, 1, 0, 0],
                 [0, 1, 0, 0, 0],
                 [0, 0, 0, 1, 0],
                 [1, 0, 0, 0, 0]],
                [[0, 0, 0, 0, 1],
                 [0, 0, 1, 0, 0],
                 [0, 0, 0, 1, 0],
                 [1, 0, 0, 0, 0],
                 [0, 1, 0, 0, 0]],
                [[0, 0, 0, 0, 1],
                 [0, 0, 1, 0, 0],
                 [0, 0, 0, 1, 0],
                 [0, 1, 0, 0, 0],
                 [1, 0, 0, 0, 0]],
                [[0, 0, 0, 0, 1],
                 [0, 0, 0, 1, 0],
                 [1, 0, 0, 0, 0],
                 [0, 1, 0, 0, 0],
                 [0, 0, 1, 0, 0]],
                [[0, 0, 0, 0, 1],
                 [0, 0, 0, 1, 0],
                 [1, 0, 0, 0, 0],
                 [0, 0, 1, 0, 0],
                 [0, 1, 0, 0, 0]],
                [[0, 0, 0, 0, 1],
                 [0, 0, 0, 1, 0],
                 [0, 1, 0, 0, 0],
                 [1, 0, 0, 0, 0],
                 [0, 0, 1, 0, 0]],
                [[0, 0, 0, 0, 1],
                 [0, 0, 0, 1, 0],
                 [0, 1, 0, 0, 0],
                 [0, 0, 1, 0, 0],
                 [1, 0, 0, 0, 0]],
                [[0, 0, 0, 0, 1],
                 [0, 0, 0, 1, 0],
                 [0, 0, 1, 0, 0],
                 [1, 0, 0, 0, 0],
                 [0, 1, 0, 0, 0]],
                [[0, 0, 0, 0, 1],
                 [0, 0, 0, 1, 0],
                 [0, 0, 1, 0, 0],
                 [0, 1, 0, 0, 0],
                 [1, 0, 0, 0, 0]]]
















def test_get_intersections_row():
    assert get_intersection_row([[0, 0, 1], [0, 1, 1], [0, 0, 1]]) == [0, -1, 1]
    assert get_intersection_row([[0, 0, 1], [0, 1, 1], [0, 0, -1]]) == [0, -1, -1]
    assert get_intersection_row([[0, 0, 1, 0], [0, 1, 1, 0], [0, 0, 1, 0], [1, 1, 1, 0]]) == [-1, -1, 1, 0]


def test_get_row_variations():
    assert get_row_variations([1, 1, -1, 0], [3]) == [[1, 1, 1, 0]]
    assert get_row_variations([-1, -1, -1, 0],  [2]) == [[1, 1, 0, 0], [0, 1, 1, 0]]
    assert get_row_variations([-1, 0, 1, 0, -1, 0], [1, 1]) == [[1, 0, 1, 0, 0, 0], [0, 0, 1, 0, 1, 0]]
    assert get_row_variations([-1, -1, -1], [1]) == [[1, 0, 0], [0, 1, 0], [0, 0, 1]]
    assert get_row_variations([0, 0, 0], [1]) == []
    assert get_row_variations([0, 0, -1, 1, 0], [3]) == []
    assert get_row_variations([0, 0, -1, 1, 0], [2]) == [[0, 0, 1, 1, 0]]
    assert get_row_variations([0, 0, 1, 1, 0], [2]) == [[0, 0, 1, 1, 0]]
    assert get_row_variations([-1, -1, -1], [2]) == [[1, 1, 0], [0, 1, 1]]
    assert get_row_variations([-1, -1, -1, -1, -1], [2, 1]) == [[1, 1, 0, 1, 0], [1, 1, 0, 0, 1], [0, 1, 1, 0, 1]]
    assert get_row_variations([-1, -1, -1, 0, 1, -1, -1, 0, -1], [3, 2, 1]) == [[1, 1, 1, 0, 1, 1, 0, 0, 1]]
    assert get_row_variations([-1, -1, -1, -1, 1, -1, -1, 0, -1,-1], [3, 2, 1]) == [[1, 1, 1, 0, 1, 1, 0, 0, 1, 0],
                                                                                    [1, 1, 1, 0, 1, 1, 0, 0, 0, 1]]
    assert get_row_variations([0, 0, 0], [0]) == []
    assert get_row_variations([-1, 1, 1, 0, -1], [3]) == [[1, 1, 1, 0, 0]]
    assert get_row_variations([1, -1, -1, 1, -1], [1, 2]) == [[1, 0, 1, 1, 0], [1, 0, 0, 1, 1]]
    assert get_row_variations([-1, -1, 1, 1, -1], [1, 2]) == [[1, 0, 1, 1, 0]]
    assert get_row_variations([-1, -1, 1, 1, -1], [1, 3]) == [[1, 0, 1, 1, 1]]
    assert get_row_variations([1, -1, 0, -1, 1], [2, 1]) == [[1, 1, 0, 0, 1]]
    assert get_row_variations([-1, -1, 1, 1, 1, 1, 1, 1, -1, -1], [8]) == \
           [[1, 1, 1, 1, 1, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 1, 1, 1, 0], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1]]
    assert get_row_variations([-1, 0, 1, -1, 0, 1, 1, 0, -1, -1], [1, 2, 2]) == [[1, 0, 1, 1, 0, 1, 1, 0, 0, 0],
                                                                                 [0, 0, 1, 0, 0, 1, 1, 0, 1, 1]]
    assert get_row_variations([-1, 1, 0, -1, -1, -1, 1, -1, -1, 1], [2, 2, 1]) == [[1, 1, 0, 0, 0, 1, 1, 0, 0, 1],
                                                                                   [1, 1, 0, 0, 0, 0, 1, 1, 0, 1]]
    assert get_row_variations([-1, 1, 0, -1, -1, 1, 1, -1, -1, -1], [2, 2, 1]) == [[1, 1, 0, 0, 0, 1, 1, 0, 1, 0],
                                                                                  [1, 1, 0, 0, 0, 1, 1, 0, 0, 1]]
    assert get_row_variations([1, 1, 0, 0, -1, 1, 1, -1, -1, 1], [2, 2, 1]) == [[1, 1, 0, 0, 0, 1, 1, 0, 0, 1]]
    assert get_row_variations([-1, 1, 0, -1, -1, 1, -1, -1, -1, -1], [2, 2, 1]) == \
           [[1, 1, 0, 0, 1, 1, 0, 1, 0, 0], [1, 1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 1, 1, 0, 0, 0, 1],
            [1, 1, 0, 0, 0, 1, 1, 0, 1, 0], [1, 1, 0, 0, 0, 1, 1, 0, 0, 1]]
    assert get_row_variations([1, -1, -1, 1, 1, -1, -1, -1, -1, -1], [1, 5]) == \
    [[1, 0, 1, 1, 1, 1, 1, 0, 0, 0], [1, 0, 0, 1, 1, 1, 1, 1, 0, 0]]


def count_row_variation2(length, blocks):
    return len(get_row_variations([-1]*length, blocks))


def count_row_variations2(length, blocks, row):
    return len(get_row_variations(row, blocks))


def test_count_row_variation():
    assert count_row_variation(3, [1, 1]) == 1
    assert count_row_variation(3, [1]) == 3
    assert count_row_variation(3, [1, 2]) == 0
    assert count_row_variation(5, [2, 1]) == 3
    assert count_row_variation(10, [15]) == count_row_variation2(10, [15])
    assert count_row_variation(10, [2, 2, 1]) == count_row_variation2(10, [2, 2, 1])
    assert count_row_variation(20, [1, 1, 1]) == count_row_variation2(20, [1, 1, 1])
    assert count_row_variation(20, [1, 1, 1]) == count_row_variation2(20, [1, 1, 1])


# def test_count_row_variations():
#     assert count_row_variations(3, [1], [-1, 1, -1]) == 1
#     assert count_row_variations(3, [1], [-1, 0, -1]) == 2
#     assert count_row_variations(3, [1, 1], [0, -1, -1]) == 0
#     assert count_row_variations(10, [2, 2, 1], [-1, 1, 0, -1, -1, 1, -1, -1, -1, -1]) ==\
#            count_row_variations2(10, [2, 2, 1], [-1, 1, 0, -1, -1, 1, -1, -1, -1, -1])